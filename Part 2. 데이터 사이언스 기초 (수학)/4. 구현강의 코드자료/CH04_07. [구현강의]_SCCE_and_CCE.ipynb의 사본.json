{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"CH04_07. [구현강의]_SCCE_and_CCE.ipynb","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"p6lRj3WUsaLg"},"source":["#SCCE Calculation"]},{"cell_type":"code","metadata":{"id":"RNBZZiCWsYux","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1658459931116,"user_tz":-540,"elapsed":4400,"user":{"displayName":"Shin's Lab","userId":"02243702979524869223"}},"outputId":"66c48852-b3a7-4711-cf1b-c7681240ff62"},"source":["import tensorflow as tf\n","\n","from tensorflow.keras.losses import SparseCategoricalCrossentropy\n","\n","batch_size, n_class = 16, 5\n","\n","predictions = tf.random.uniform(shape=(batch_size, n_class),\n","                                      minval=0, maxval=1,\n","                                      dtype=tf.float32)\n","\n","pred_sum = tf.reshape(tf.reduce_sum(predictions, axis=1), (-1, 1))\n","predictions = predictions/pred_sum\n","\n","labels = tf.random.uniform(shape=(batch_size, ), \n","                                  minval=0, maxval=n_class,\n","                                  dtype=tf.int32)\n","\n","loss_object = SparseCategoricalCrossentropy()\n","loss = loss_object(labels, predictions)\n","\n","print(loss.numpy())\n","\n","ce = 0\n","for label, prediction in zip(labels, predictions):\n","    ce += -tf.math.log(prediction[label])\n","    ce /= batch_size\n","print(ce.numpy())"],"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["1.7720896\n","0.12359759\n"]}]},{"cell_type":"markdown","metadata":{"id":"byV8OnVzsbdr"},"source":["#SCCE with Model/Dataset"]},{"cell_type":"code","metadata":{"id":"KUmbXEMMsbry","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1658459931117,"user_tz":-540,"elapsed":7,"user":{"displayName":"Shin's Lab","userId":"02243702979524869223"}},"outputId":"c6060853-a6f5-4a25-8290-9ec2995ccd61"},"source":["import tensorflow as tf\n","\n","from tensorflow.keras.layers import Dense\n","\n","from tensorflow.keras.losses import SparseCategoricalCrossentropy\n","\n","N, n_feature = 100, 2\n","n_class = 5\n","\n","X = tf.zeros(shape=(0, n_feature))\n","Y = tf.zeros(shape=(0, 1), dtype=tf.int32)\n","\n","for class_idx in range(n_class):\n","  center = tf.random.uniform(minval=-15, maxval=15, shape=(2, ))\n","\n","  x1 = center[0] + tf.random.normal(shape=(N, 1))\n","  x2 = center[1] + tf.random.normal(shape=(N, 1))\n","\n","  x = tf.concat((x1, x2), axis=1)\n","  y = class_idx*tf.ones(shape=(N, 1), dtype=tf.int32)\n","\n","  X = tf.concat((X, x), axis=0)\n","  Y = tf.concat((Y, y), axis=0)\n","\n","dataset = tf.data.Dataset.from_tensor_slices((X, Y))\n","dataset = dataset.batch(batch_size)\n","\n","model = Dense(units=n_class, activation = 'softmax' )\n","loss_object = SparseCategoricalCrossentropy()\n","\n","for x, y in dataset:\n","  predictions = model(x)\n","  loss = loss_object(y, predictions)\n","  print(loss.numpy())"],"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["12.427575\n","12.347681\n","12.18693\n","12.365705\n","12.589239\n","12.323389\n","5.65392\n","3.6247106\n","3.6445234\n","3.4553795\n","3.7521906\n","3.4338706\n","6.3809843\n","8.489218\n","8.538244\n","8.746622\n","8.549538\n","8.903898\n","7.200657\n","4.486558\n","4.369508\n","4.2099442\n","4.474908\n","4.4516535\n","4.291495\n","0.17719412\n","0.17130367\n","0.16801776\n","0.21069333\n","0.17169896\n","0.17572884\n","0.15121901\n"]}]},{"cell_type":"markdown","metadata":{"id":"jPXB5LGAscFQ"},"source":["# CCE Calculation"]},{"cell_type":"code","metadata":{"id":"pFfNK093scRG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1658227592422,"user_tz":-540,"elapsed":288,"user":{"displayName":"JE Yang","userId":"14584853829657109231"}},"outputId":"274c03d9-91ef-4d34-9d89-8ae5b2a30a3d"},"source":["import tensorflow as tf\n","\n","from tensorflow.keras.losses import CategoricalCrossentropy\n","\n","batch_size, n_class = 16, 5\n","\n","predictions = tf.random.uniform(shape=(batch_size, n_class),\n","                                minval=0, maxval=1,\n","                                dtype=tf.float32)\n","pred_sum = tf.reshape(tf.reduce_sum(predictions, axis=1), (-1, 1))\n","predictions = predictions/pred_sum\n","\n","labels = tf.random.uniform(shape=(batch_size, ),\n","                          minval=0, maxval=n_class,\n","                          dtype=tf.int32)\n","\n","labels = tf.one_hot(labels, n_class)\n","\n","loss_object = CategoricalCrossentropy()\n","loss = loss_object(labels, predictions)\n","\n","print(\"CCE(Tensorfiow): \", loss.numpy())\n","\n","cce_man = tf.reduce_mean(tf.reduce_sum(labels*tf.math.log(predictions), axis=1))\n","print(\"CCE(Manual): \", cce_man.numpy())"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["CCE(Tensorfiow):  2.0285292\n","CCE(Manual):  -2.0285292\n"]}]},{"cell_type":"markdown","metadata":{"id":"HZw3CnJssjno"},"source":["# CCE with Model/Dataset"]},{"cell_type":"code","metadata":{"id":"Vtlm1Ut7sj-W","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1658460007867,"user_tz":-540,"elapsed":448,"user":{"displayName":"Shin's Lab","userId":"02243702979524869223"}},"outputId":"f47a7fce-dcb7-4d93-c925-359ce0bb83d1"},"source":["import tensorflow as tf\n","from tensorflow.keras.losses import CategoricalCrossentropy\n","\n","\n","N, n_feature = 6, 2\n","n_class = 5\n","X = tf.zeros(shape=(0, n_feature))\n","Y = tf.zeros(shape=(0, ), dtype=tf.int32)\n","\n","for class_idx in range(n_class):\n","  center = tf.random.uniform(minval=-15, maxval=15, shape=(2, ))\n","  \n","  x1 = center[0] + tf.random.normal(shape=(N, 1))\n","  x2 = center[1] + tf.random.normal(shape=(N, 1))\n","\n","  x = tf.concat((x1, x2), axis=1)\n","  y = class_idx*tf.ones(shape=(N, ), dtype=tf.int32)\n","\n","  X = tf.concat((X, x), axis=0)\n","  Y = tf.concat((Y, y), axis=0)\n","\n","Y = tf.one_hot(Y, depth=n_class, dtype=tf.int32)\n","\n","dataset = tf.data.Dataset.from_tensor_slices((X, Y))\n","dataset = dataset .batch(batch_size)\n","\n","model = Dense(units=n_class, activation='softmax')\n","loss_object = CategoricalCrossentropy()\n","\n","for x, y in dataset:\n","  predictions = model(x)\n","  loss = loss_object(y, predictions)\n","  print(loss.numpy())"],"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["5.2069864\n","1.9976794\n"]}]},{"cell_type":"code","source":[""],"metadata":{"id":"IDstRmuX62cn"},"execution_count":null,"outputs":[]}]}