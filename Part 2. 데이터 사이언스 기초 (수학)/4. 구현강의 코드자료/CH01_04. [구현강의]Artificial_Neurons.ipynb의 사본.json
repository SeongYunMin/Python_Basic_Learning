{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"CH01_04. [구현강의]Artificial_Neurons.ipynb","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"GMX6eJLkRx9r"},"source":["#Activation Layer"]},{"cell_type":"code","metadata":{"id":"ZhPMmTpARwnk","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1658458726285,"user_tz":-540,"elapsed":4665,"user":{"displayName":"Shin's Lab","userId":"02243702979524869223"}},"outputId":"9d7c421c-a488-4637-8742-949161215662"},"source":["import tensorflow as tf\n","\n","from tensorflow.math import exp, maximum\n","from tensorflow.keras.layers import Activation\n","\n","x = tf.random.normal(shape=(1, 5))\n","\n","sigmoid = Activation('sigmoid')\n","tanh = Activation('tanh')\n","relu = Activation('relu')\n","\n","y_sigmoid_tf = sigmoid(x)\n","y_tanh_tf = tanh(x)\n","y_relu_tf = relu(x)\n","\n","y_sigmoid_man = 1 / (1 + exp(-x))\n","y_tanh_man = (exp(x) - exp(-x) / exp(x) + exp(-x))\n","y_relu_man = maximum(x, 0)\n","\n","print(\"x = {}\\n{}\".format(x.shape, x.numpy()))\n","print(\"sigmoid(Tensorflow) :{}\\n{}\".format(y_sigmoid_tf.shape, y_sigmoid_tf.numpy()))\n","print(\"sigmoid(manual) :{}\\n{}\".format(y_sigmoid_man.shape, y_sigmoid_man.numpy()))\n","\n","print(\"Tanh(Tensorflow) :{}\\n{}\".format(y_tanh_tf.shape, y_tanh_tf.numpy()))\n","print(\"Tanh(manual) :{}\\n{}\".format(y_tanh_man.shape, y_tanh_man.numpy()))\n","\n","print(\"ReLU(Tensorflow) :{}\\n{}\".format(y_relu_tf.shape, y_relu_tf.numpy()))\n","print(\"ReLU(manual) :{}\\n{}\".format(y_relu_man.shape, y_relu_man.numpy()))\n","\n"],"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["x = (1, 5)\n","[[ 0.5270141  -2.208237    0.8893763  -0.3247602   0.87216747]]\n","sigmoid(Tensorflow) :(1, 5)\n","[[0.62878644 0.09901324 0.70876145 0.4195161  0.7051965 ]]\n","sigmoid(manual) :(1, 5)\n","[[0.6287864  0.09901325 0.7087614  0.41951606 0.7051965 ]]\n","Tanh(Tensorflow) :(1, 5)\n","[[ 0.48309535 -0.97613466  0.7110855  -0.31380475  0.7024737 ]]\n","Tanh(manual) :(1, 5)\n","[[  1.9357011  -73.59424      2.6756747    0.19177711   2.6353736 ]]\n","ReLU(Tensorflow) :(1, 5)\n","[[0.5270141  0.         0.8893763  0.         0.87216747]]\n","ReLU(manual) :(1, 5)\n","[[0.5270141  0.         0.8893763  0.         0.87216747]]\n"]}]},{"cell_type":"markdown","metadata":{"id":"8I2tnnSdR0BS"},"source":["#Activation in Dense Layer"]},{"cell_type":"code","metadata":{"id":"5PxdT2kLR6DS","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1658458735788,"user_tz":-540,"elapsed":539,"user":{"displayName":"Shin's Lab","userId":"02243702979524869223"}},"outputId":"1f8572b6-2bd5-4ae9-d221-0ccb383288e9"},"source":["import tensorflow as tf\n","\n","# from tensorflow.math import exp, maximum\n","from tensorflow.keras.layers import Dense\n","\n","\n","# imp. artificial neurons\n","dense_sigmoid = Dense(units = 1 , activation = 'sigmoid')\n","dense_tanh = Dense(units = 1 , activation = 'tanh')\n","dense_relu = Dense(units = 1 , activation = 'relu')\n","\n","# forward propagation\n","y_sigmoid = dense_sigmoid(x)\n","y_tanh = dense_tanh(x)\n","y_relu = dense_relu(x)\n","\n","\n","print(\"AN with Sigmoid: {}\\n{}\".format(y_sigmoid.shape, y_sigmoid.numpy()))\n","print(\"AN with Tanh: {}\\n{}\".format(y_tanh.shape, y_tanh.numpy()))\n","print(\"AN with ReLU: {}\\n{}\".format(y_relu.shape, y_relu.numpy()))\n","\n","# forward propagation(manual)\n","print('\\n=========\\n')\n","\n","W,B = dense_sigmoid.get_weights()\n","z = tf.linalg.matmul(x, W) + B\n","a = 1 / (1 + exp(-z))\n","\n","print(\"Activation value(Tensorflow)= {}\\n{}\".format(y_sigmoid.shape, y_sigmoid.numpy()))\n","print(\"Activation value(manual)= {}\\n{}\".format(a.shape, a.numpy()))\n","\n","\n"],"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["AN with Sigmoid: (1, 1)\n","[[0.13967276]]\n","AN with Tanh: (1, 1)\n","[[-0.8699758]]\n","AN with ReLU: (1, 1)\n","[[0.]]\n","\n","=========\n","\n","Activation value(Tensorflow)= (1, 1)\n","[[0.13967276]]\n","Activation value(manual)= (1, 1)\n","[[0.13967279]]\n"]}]},{"cell_type":"markdown","metadata":{"id":"QwCxhS6JR0kS"},"source":["#Artificial Nuerons"]},{"cell_type":"code","metadata":{"id":"5CN0en_hR8aK","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1658458763049,"user_tz":-540,"elapsed":5,"user":{"displayName":"Shin's Lab","userId":"02243702979524869223"}},"outputId":"07594ca7-f65e-476c-9d8c-db9cebfb6c06"},"source":["import tensorflow as tf\n","\n","from tensorflow.keras.layers import Dense\n","from tensorflow.math import exp, maximum\n","\n","activation = 'relu'\n","\n","x = tf.random.uniform(shape=(1,10))\n","\n","dense = Dense(units=1, activation=activation)\n","\n","y_tf = dense(x)\n","W, B = dense.get_weights()\n","\n","y_man = tf.linalg.matmul(x, W) +B\n","if activation == 'sigmoid':\n","  y_man = 1/(1 + exp(-y_man))\n","elif activation == 'tanh':\n","  y_man = (exp(y_man) - exp(-y_man)) / (exp(y_man) + exp(-y_man))\n","elif activation == 'relu':\n","  y_man = maximum(y_man, 0)\n","\n","print(\"Activation : \",activation)\n","print(\"Y_tf : {}\\n{}\\n\".format(y_tf.shape, y_tf.numpy()))\n","print(\"Y_man : {}\\n{}\\n\".format(y_man.shape, y_man.numpy())) \n"],"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Activation :  relu\n","Y_tf : (1, 1)\n","[[0.]]\n","\n","Y_man : (1, 1)\n","[[0.]]\n","\n"]}]},{"cell_type":"markdown","metadata":{"id":"ujr6ZUDeZFGf"},"source":["#Shapes of Dense Layers"]},{"cell_type":"code","metadata":{"id":"SJGr4TguYzGD","executionInfo":{"status":"ok","timestamp":1658220509303,"user_tz":-540,"elapsed":4,"user":{"displayName":"JE Yang","userId":"14584853829657109231"}},"outputId":"d9e45718-5cc2-4c9b-b8a8-adf6021c893c","colab":{"base_uri":"https://localhost:8080/"}},"source":["import tensorflow as tf\n","\n","from tensorflow.keras.layers import Dense\n","\n","N, n_feature = 16, 10\n","x = tf.random.normal(shape=(N , n_feature))\n","\n","dense = Dense(units=1, activation='relu')\n","y = dense(x)\n","\n","W,B = dense.get_weights()\n","\n","print(\"shape of x : {}\", x.shape)\n","print(\"shape of W : {}\", W.shape)\n","print(\"shape of B : {}\", B.shape)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["shape of x : {} (16, 10)\n","shape of W : {} (10, 1)\n","shape of B : {} (1,)\n"]}]},{"cell_type":"markdown","metadata":{"id":"4EBSii7kY4n7"},"source":["# Output Calculations"]},{"cell_type":"code","metadata":{"id":"S6_cxkhUYrAb","executionInfo":{"status":"ok","timestamp":1658458817579,"user_tz":-540,"elapsed":569,"user":{"displayName":"Shin's Lab","userId":"02243702979524869223"}},"outputId":"438d9f5f-73bf-4776-b490-83026b9fd6c8","colab":{"base_uri":"https://localhost:8080/"}},"source":["import tensorflow as tf\n","\n","from tensorflow.keras.layers import Dense\n","\n","N, n_feature = 8, 10\n","x = tf.random.normal(shape=(N, n_feature))\n","\n","dense = Dense(units=1, activation='sigmoid' )\n","y_tf  = dense(x)\n","\n","W,B = dense.get_weights()\n","\n","y_man = tf.linalg.matmul(x, W) +B\n","y_man = 1/ (1 + tf.math.exp(-y_man))\n","\n","print(\"Output(Tensorflow) : \\n\", y_tf.numpy())\n","print(\"Output(Manual) : \\n\", y_man.numpy())"],"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["Output(Tensorflow) : \n"," [[0.7842808 ]\n"," [0.3721592 ]\n"," [0.9157423 ]\n"," [0.4961929 ]\n"," [0.78322965]\n"," [0.18761891]\n"," [0.15033624]\n"," [0.16033348]]\n","Output(Manual) : \n"," [[0.78428084]\n"," [0.37215918]\n"," [0.91574234]\n"," [0.49619287]\n"," [0.78322965]\n"," [0.18761891]\n"," [0.15033627]\n"," [0.16033345]]\n"]}]},{"cell_type":"code","source":[""],"metadata":{"id":"bwcTdmPa2T4e"},"execution_count":null,"outputs":[]}]}