{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"CH02_05. [구현강의]_Dense_Layers.ipynb","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"Bhd4x-PRdeS2"},"source":["#shapes of Dense Layers"]},{"cell_type":"code","metadata":{"id":"OQYwld7VdNDJ","executionInfo":{"status":"ok","timestamp":1658459490252,"user_tz":-540,"elapsed":4771,"user":{"displayName":"Shin's Lab","userId":"02243702979524869223"}},"outputId":"5f8e7d75-2077-4dea-ac90-ad134c10053f","colab":{"base_uri":"https://localhost:8080/"}},"source":["import tensorflow as tf\n","\n","from tensorflow.keras.layers import Dense\n","\n","N, n_feature = 8, 10\n","X = tf.random.normal(shape=(N, n_feature))\n","\n","n_neuron = 3\n","dense = Dense(units=n_neuron, activation='sigmoid')\n","Y = dense(X)\n","\n","W, B = dense.get_weights()\n","\n","print('=============Input/Weight/Bias============')\n","print(\"X : \", X.shape)\n","print(\"W : \", W.shape)\n","print(\"B : \", B.shape)\n","print(\"Y : \", Y.shape)"],"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["=============Input/Weight/Bias============\n","X :  (8, 10)\n","W :  (10, 3)\n","B :  (3,)\n","Y :  (8, 3)\n"]}]},{"cell_type":"code","source":[""],"metadata":{"id":"rAQ8LijK41Vv"},"execution_count":null,"outputs":[]}]}