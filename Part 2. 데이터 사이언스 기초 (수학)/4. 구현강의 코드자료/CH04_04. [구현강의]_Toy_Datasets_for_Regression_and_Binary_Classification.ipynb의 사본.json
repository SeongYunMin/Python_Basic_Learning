{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"CH04_04. [구현강의]_Toy_Datasets_for_Regression_and_Binary_Classification.ipynb","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"aqCtafU0izVB"},"source":["# Dataset for Regression"]},{"cell_type":"code","metadata":{"id":"k2C9DsT2iydD","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1658459762123,"user_tz":-540,"elapsed":5595,"user":{"displayName":"Shin's Lab","userId":"02243702979524869223"}},"outputId":"3e2dba7a-41f4-4dd8-aec8-62e0b130141b"},"source":["import tensorflow as tf\n","\n","N, n_feature  = 8, 5\n","t_weights = tf.constant([1, 2, 3, 4, 5], dtype=tf.float32)\n","t_bias = tf.constant([10], dtype=tf.float32)\n","\n","X = tf.random.normal(mean=0, stddev=1, shape=(N, n_feature))\n","Y = tf.reduce_sum(t_weights*X, axis=1) + t_bias\n","\n","print(\"X(shape/dtype/data) : {} / {}\\n{}\\n\".format(X.shape, X.dtype, X.numpy()))\n","print(\"Y(shape/dtype/data) : {} / {}\\n{}\\n\".format(Y.shape, Y.dtype, Y.numpy()))"],"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["X(shape/dtype/data) : (8, 5) / <dtype: 'float32'>\n","[[-1.6305119  -1.805497    1.225259    0.7582354   0.31730777]\n"," [-0.3438715   0.04770236 -0.90052265  0.76320934 -1.4490833 ]\n"," [-0.74900234  0.19414115 -1.196121    0.5046017  -0.21375513]\n"," [ 0.7398529   0.1294306  -0.31673238  0.00903469 -0.34005117]\n"," [ 0.08984306 -0.142078    0.73485345  1.7385397   1.0614804 ]\n"," [ 0.67173743  1.0271041  -0.8718389  -0.6983374  -0.49951652]\n"," [-0.7566725  -0.82093555 -0.27442077  0.10315524  1.0790658 ]\n"," [ 1.1947998  -0.15906483  0.7790403   1.0775137   0.04237304]]\n","\n","Y(shape/dtype/data) : (8,) / <dtype: 'float32'>\n","[13.053751   2.857386   7.0005484  8.384399  24.271809   4.819497\n"," 12.5861435 17.73571  ]\n","\n"]}]},{"cell_type":"markdown","metadata":{"id":"pzu3LHYQizqa"},"source":["# Dataset for BInary Classification"]},{"cell_type":"code","metadata":{"id":"514ReJpSi0FS","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1658459782887,"user_tz":-540,"elapsed":377,"user":{"displayName":"Shin's Lab","userId":"02243702979524869223"}},"outputId":"b256fcbc-9b6a-4bb9-b1bf-b3e50c6b08de"},"source":["import tensorflow as tf\n","\n","N,n_feature  = 8, 5\n","t_weights = tf.constant([1, 2, 3, 4, 5], dtype=tf.float32)\n","t_bias = tf.constant([10], dtype=tf.float32)\n","\n","X = tf.random.normal(mean=0, stddev=1, shape=(N, n_feature))\n","Y = tf.reduce_sum(t_weights*X, axis=1) + t_bias\n","Y = tf.cast(Y > 5, tf.int32)\n","\n","print(\"X(shape/dtype/data) : {} / {}\\n{}\\n\".format(X.shape, X.dtype, X.numpy()))\n","print(\"Y(shape/dtype/data) : {} / {}\\n{}\\n\".format(Y.shape, Y.dtype, Y.numpy()))"],"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["X(shape/dtype/data) : (8, 5) / <dtype: 'float32'>\n","[[ 0.76584256  1.5379049   1.386023    2.5360878  -0.95276886]\n"," [-0.1035274  -1.743705   -0.51054764  1.0518085   0.00375551]\n"," [ 0.47613162 -0.2852873   0.00752896  0.46079803  0.5170179 ]\n"," [ 0.06616055 -1.3745799  -1.4074214   0.4081252   0.38746694]\n"," [ 0.40902904  0.10497858  0.17588128 -0.47264263 -0.56609553]\n"," [-2.4013915  -1.5648215  -1.4561516   1.5342381  -0.75697947]\n"," [ 0.7509954   0.54094654 -1.0085133   0.7375172  -0.5718791 ]\n"," [ 0.5209612  -0.27185643 -1.2279801  -0.77265394  0.7205701 ]]\n","\n","Y(shape/dtype/data) : (8,) / <dtype: 'int32'>\n","[1 1 1 1 1 0 1 1]\n","\n"]}]},{"cell_type":"code","source":[""],"metadata":{"id":"T4Ob7l9N5_sJ"},"execution_count":null,"outputs":[]}]}